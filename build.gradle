buildscript {

  repositories {
    mavenCentral()
  }

  dependencies {
    /* 添加插件依赖路径（通过jar方式） */
    classpath(group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.3.1.RELEASE')
  }
}

allprojects {

  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management' /* 依赖管理，用来传递spring的依赖 */

  [compileJava, compileTestJava, javadoc]*.options*.encoding = rootProject.ext.charset

  jar.enabled = true
  bootJar.enabled = false

  java {
    withJavadocJar()
    withSourcesJar()
  }

  repositories {
    mavenCentral()
  }

  dependencyManagement {
    imports {
      mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR6'
    }
  }

  dependencies {

    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // mariadb
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

    testImplementation group: 'junit', name: 'junit'

    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'

    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'

  }

  sourceSets {
    main {
      resources {
        srcDir 'src/main/java'
      }
    }
  }


  // 测试配置
  test {
    exclude '**/*Test*.class'
  }

}
